{"version":3,"sources":["index.module.scss","components/Progress.tsx","components/SaveOrEdit.tsx","components/DeleteButton.tsx","configs.ts","components/Todo.tsx","components/Spinner.tsx","redux/actions/index.ts","components/AddTodo.tsx","components/DeleteAll.tsx","App.tsx","serviceWorker.ts","redux/sagas/index.ts","redux/reducers/index.ts","redux/store.ts","index.tsx"],"names":["module","exports","React","memo","open","className","edit","type","styles","submit__btn","handleDelete","onClick","networkProwider","axios","create","baseURL","ColorsClassnames","Map","whitchColorName","color","key","DeleteTodoURL","todoId","Todo","index","todo","updateTodo","deleteTodo","useState","setEdit","title","name","setName","description","text","setText","setColor","colorClass","useMemo","handeleEdit","useCallback","state","handeleColorChange","_edit","_color","useEffect","panding","onSubmit","ev","preventDefault","required","value","onChange","e","target","count","getTodosPandingAction","payload","getTodosErrorAction","updateTodoPandingAction","updateTodoSuccesAction","updateTodoErrorAction","deleteTodoSuccesAction","deleteTodoErrorAction","deleteAllTodosErrorAction","createTodoPandingAction","createTodoSuccesAction","createTodoErrorAction","modalRoot","document","getElementById","Modal","props","el","createElement","appendChild","this","removeChild","prevProps","setState","colorClassPrefix","ReactDOM","createPortal","id","addTodo","handleClick","placeholder","handleName","handleText","handleColor","bind","Component","mapDispatchToProps","ModalCont","connect","connector","Parent","App","useSelector","todos","dispatch","useDispatch","updateTodoAction","deleteAllTodos","length","map","_id","Boolean","window","location","hostname","match","getTodosWroker","updateTodoWorker","deleteTodoWorker","deleteAllTodosWorker","addTodoWorker","rootSaga","select","put","call","get","data","storeTodos","curentTodo","newTodosList","patch","delete","filter","item","retry","f","post","all","takeEvery","initialState","error","reducer","action","persistConfig","storage","persistedReducer","persistReducer","rootReducer","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","sagas","persistor","persistStore","configureStore","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.a55c8f05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"submit__btn\":\"src_submit__btn__1uo9V\",\"edit\":\"src_edit__3MOnq\"};","import React from \"react\";\r\n\r\ntype Props = { open?: boolean };\r\n\r\nconst Progress: React.FC<Props> = ({ open = false }) => {\r\n  return open ? (\r\n    <div className=\"progress progress__card_header\">\r\n      <div className=\"indeterminate\" />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default React.memo(Progress);\r\n","import React from \"react\";\r\nimport styles from \"../index.module.scss\";\r\n\r\ntype Props = {\r\n  edit?: boolean;\r\n};\r\n\r\nconst SaveOrEdit: React.FC<Props> = ({ edit = false }) => {\r\n  return (\r\n    <button\r\n      type=\"submit\"\r\n      className={`btn waves-effect waves-light ${styles.submit__btn}`}\r\n    >\r\n      <div className={!edit ? styles.edit : \"\"}>\r\n        <div>\r\n          Save\r\n          <i className=\"material-icons right\">save</i>\r\n        </div>\r\n        <div>\r\n          Edit\r\n          <i className=\"material-icons right\">edit</i>\r\n        </div>\r\n      </div>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default React.memo(SaveOrEdit);\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  handleDelete: () => void;\r\n};\r\n\r\nconst DeleteButton: React.FC<Props> = ({ handleDelete }) => {\r\n  return (\r\n    <button\r\n      onClick={handleDelete}\r\n      className=\"btn waves-effect waves-light red darken-2\"\r\n      type=\"button\"\r\n    >\r\n      <i className=\"material-icons\">delete</i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default React.memo(DeleteButton);\r\n","import axios from \"axios\";\r\n\r\nconst networkProwider = axios.create({\r\n  baseURL: \"http://todo.api.eachbase.com/api\",\r\n});\r\n\r\nconst ColorsClassnames = new Map([\r\n  [\"selected_blue\", \"#3f51b5\"],\r\n  [\"selected_green\", \"#4caf50\"],\r\n  [\"selected_pink\", \"#e91e63\"],\r\n  [\"selected_purple\", \"#9c27b0\"],\r\n  [\"selected_sea-blue\", \"#2196f3\"],\r\n  [\"selected_yellow\", \"#ffc107\"],\r\n]);\r\n\r\nexport const whitchColorName = (color: Colors) => {\r\n  for (const [key, value] of ColorsClassnames) {\r\n    if (color === value) {\r\n      return key;\r\n    }\r\n  }\r\n};\r\n\r\n/** URLS */\r\n\r\nexport const GetTodosURL = \"/todo\";\r\nexport const CreateTodoURL = \"/todo/\";\r\nexport const DeleteTodoURL: (todoId: string) => string = (todoId) =>\r\n  `/todo/${todoId}`;\r\nexport const UpdateTodoURL: (todoId: string) => string = (todoId) =>\r\n  `/todo/${todoId}`;\r\n\r\nexport { networkProwider };\r\n","import React, { useState, useCallback, useMemo, useEffect } from \"react\";\r\nimport Progress from \"./Progress\";\r\nimport SaveOrEdit from \"./SaveOrEdit\";\r\nimport DeleteButton from \"./DeleteButton\";\r\nimport { whitchColorName } from \"../configs\";\r\n\r\ntype TodoProps = {\r\n  index: number;\r\n  todo: TODO;\r\n  updateTodo: (index: number, todo: TODO) => void;\r\n  deleteTodo: (index: number) => void;\r\n};\r\n\r\nconst Todo: React.FC<TodoProps> = ({ index, todo, updateTodo, deleteTodo }) => {\r\n  const [edit, setEdit] = useState<boolean>(false);\r\n  const [name, setName] = useState<string>(todo.title);\r\n  const [text, setText] = useState<string>(todo.description);\r\n  const [color, setColor] = useState<Colors>(todo.color);\r\n\r\n  const colorClass = useMemo(() => whitchColorName(color), [color]);\r\n\r\n  const handeleEdit = useCallback((state: boolean) => {\r\n    setEdit(state);\r\n  }, []);\r\n\r\n  const handeleColorChange = useCallback((_edit: boolean, _color: Colors) => {\r\n    setEdit(_edit);\r\n    setColor(_color);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    handeleEdit(false);\r\n  }, [handeleEdit, todo]);\r\n\r\n  return (\r\n    <div className=\"col col_item s12 m12 l6 xl4\">\r\n      <div className=\"card card__block blue-grey\">\r\n        <Progress open={todo.panding} />\r\n        <form\r\n          onSubmit={(ev) => {\r\n            ev.preventDefault();\r\n            if (edit) {\r\n              updateTodo(index, {\r\n                ...todo,\r\n                description: text,\r\n                title: name,\r\n                color,\r\n              });\r\n            } else {\r\n              handeleEdit(true);\r\n            }\r\n          }}\r\n        >\r\n          <div className=\"card-content white-text\">\r\n            {!edit ? (\r\n              <>\r\n                <span className=\"card-title\">{name}</span>\r\n                <p>{text}</p>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  required\r\n                  className=\"card-title\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                />\r\n                <textarea\r\n                  required\r\n                  value={text}\r\n                  onChange={(e) => setText(e.target.value)}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"card-action card__action_wraper\">\r\n            <div className=\"action__block\">\r\n              <SaveOrEdit edit={edit} />\r\n              <DeleteButton handleDelete={() => deleteTodo(index)} />\r\n            </div>\r\n            <div className={`color__block ${colorClass}`}>\r\n              <div\r\n                onClick={() => handeleColorChange(true, \"#e91e63\")}\r\n                className=\"pink circle\"\r\n              />\r\n              <div\r\n                onClick={() => handeleColorChange(true, \"#9c27b0\")}\r\n                className=\"purple circle\"\r\n              />\r\n              <div\r\n                onClick={() => handeleColorChange(true, \"#4caf50\")}\r\n                className=\"green circle\"\r\n              />\r\n              <div\r\n                onClick={() => handeleColorChange(true, \"#ffc107\")}\r\n                className=\"yellow circle\"\r\n              />\r\n              <div\r\n                onClick={() => handeleColorChange(true, \"#2196f3\")}\r\n                className=\"sea-blue circle\"\r\n              />\r\n              <div\r\n                onClick={() => handeleColorChange(true, \"#3f51b5\")}\r\n                className=\"blue circle\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  panding: boolean;\r\n  count: number;\r\n};\r\n\r\nconst Spinner: React.FC<Props> = ({ panding, count }) => {\r\n  if (count === 0 && panding) {\r\n    return (\r\n      <div className=\"preloader-wrapper big active\">\r\n        <div className=\"spinner-layer spinner-blue-only\">\r\n          <div className=\"circle-clipper left\">\r\n            <div className=\"circle\" />\r\n          </div>\r\n          <div className=\"gap-patch\">\r\n            <div className=\"circle\" />\r\n          </div>\r\n          <div className=\"circle-clipper right\">\r\n            <div className=\"circle\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (count === 0 && !panding) {\r\n    return (\r\n      <div className=\"preloader-wrapper\">\r\n        <h4>There is no ToDo</h4>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default React.memo(Spinner);\r\n","export const getTodosPandingAction: (\r\n  payload: boolean\r\n) => {\r\n  type: GET_TODOS_PANDING;\r\n  payload: boolean;\r\n} = (payload) => ({ type: \"GET_TODOS_PANDING\", payload });\r\n\r\nexport const getTodosSuccesAction: (\r\n  payload: TODOS\r\n) => {\r\n  type: GET_TODOS_SUCCES;\r\n  payload: TODOS;\r\n} = (payload) => ({ type: \"GET_TODOS_SUCCES\", payload });\r\n\r\nexport const getTodosErrorAction: (\r\n  payload: Error\r\n) => {\r\n  type: GET_TODOS_ERROR;\r\n  payload: Error;\r\n} = (payload) => ({ type: \"GET_TODOS_ERROR\", payload });\r\n\r\nexport const getTodosAction: () => {\r\n  type: GET_TODOS;\r\n} = () => ({ type: \"GET_TODOS\" });\r\n\r\nexport const updateTodoPandingAction: (\r\n  payload: TODOS\r\n) => {\r\n  type: UPDATE_TODO_PANDING;\r\n  payload: TODOS;\r\n} = (payload) => ({ type: \"UPDATE_TODO_PANDING\", payload });\r\n\r\nexport const updateTodoSuccesAction: (\r\n  payload: TODOS\r\n) => {\r\n  type: UPDATE_TODO_SUCCES;\r\n  payload: TODOS;\r\n} = (payload) => ({ type: \"UPDATE_TODO_SUCCES\", payload });\r\n\r\nexport const updateTodoErrorAction: (\r\n  payload: Error\r\n) => {\r\n  type: UPDATE_TODO_ERROR;\r\n  payload: Error;\r\n} = (payload) => ({ type: \"UPDATE_TODO_ERROR\", payload });\r\n\r\nexport const updateTodoAction: (\r\n  payload: TODO,\r\n  index: number\r\n) => {\r\n  type: UPDATE_TODO;\r\n  index: number;\r\n  payload: TODO;\r\n} = (payload, index) => ({ type: \"UPDATE_TODO\", payload, index });\r\n\r\nexport const deleteTodoPandingAction: (\r\n  payload: TODOS\r\n) => {\r\n  type: DELETE_TODO_PANDING;\r\n  payload: TODOS;\r\n} = (payload) => ({ type: \"DELETE_TODO_PANDING\", payload });\r\n\r\nexport const deleteTodoSuccesAction: (\r\n  payload: TODOS\r\n) => {\r\n  type: DELETE_TODO_SUCCES;\r\n  payload: TODOS;\r\n} = (payload) => ({ type: \"DELETE_TODO_SUCCES\", payload });\r\n\r\nexport const deleteTodoErrorAction: (\r\n  payload: Error\r\n) => {\r\n  type: DELETE_TODO_ERROR;\r\n  payload: Error;\r\n} = (payload) => ({ type: \"DELETE_TODO_ERROR\", payload });\r\n\r\nexport const deleteTodoAction: (\r\n  payload: number\r\n) => {\r\n  type: DELETE_TODO;\r\n  payload: number;\r\n} = (payload) => ({ type: \"DELETE_TODO\", payload });\r\n\r\nexport const deleteAllTodosPandingAction: (\r\n  payload: TODOS\r\n) => {\r\n  type: DELETE_ALL_TODOS_PANDING;\r\n  payload: TODOS;\r\n} = (payload) => ({ type: \"DELETE_ALL_TODOS_PANDING\", payload });\r\n\r\nexport const deleteAllTodosSuccesAction: (\r\n  payload: TODOS\r\n) => {\r\n  type: DELETE_ALL_TODOS_SUCCES;\r\n  payload: TODOS;\r\n} = (payload) => ({ type: \"DELETE_ALL_TODOS_SUCCES\", payload });\r\n\r\nexport const deleteAllTodosErrorAction: (\r\n  payload: Error\r\n) => {\r\n  type: DELETE_ALL_TODOS_ERROR;\r\n  payload: Error;\r\n} = (payload) => ({ type: \"DELETE_ALL_TODOS_ERROR\", payload });\r\n\r\nexport const deleteAllTodosAction: () => {\r\n  type: DELETE_ALL_TODOS;\r\n} = () => ({ type: \"DELETE_ALL_TODOS\" });\r\n\r\nexport const createTodoPandingAction: (\r\n  payload: boolean\r\n) => {\r\n  type: ADD_TODO_PANDING;\r\n  payload: boolean;\r\n} = (payload) => ({ type: \"ADD_TODO_PANDING\", payload });\r\n\r\nexport const createTodoSuccesAction: (\r\n  payload: TODOS\r\n) => {\r\n  type: ADD_TODO_SUCCES;\r\n  payload: TODOS;\r\n} = (payload) => ({ type: \"ADD_TODO_SUCCES\", payload });\r\n\r\nexport const createTodoErrorAction: (\r\n  payload: Error\r\n) => {\r\n  type: ADD_TODO_ERROR;\r\n  payload: Error;\r\n} = (payload) => ({ type: \"ADD_TODO_ERROR\", payload });\r\n\r\nexport const createTodoAction: (payload: {\r\n  color: Colors;\r\n  description: string;\r\n  title: string;\r\n}) => {\r\n  type: ADD_TODO;\r\n  payload: { color: Colors; description: string; title: string };\r\n} = (payload) => ({ type: \"ADD_TODO\", payload });\r\n\r\nexport type ReduxActionTypes =\r\n  | ReturnType<typeof getTodosPandingAction>\r\n  | ReturnType<typeof getTodosSuccesAction>\r\n  | ReturnType<typeof getTodosErrorAction>\r\n  | ReturnType<typeof updateTodoPandingAction>\r\n  | ReturnType<typeof updateTodoSuccesAction>\r\n  | ReturnType<typeof updateTodoErrorAction>\r\n  | ReturnType<typeof deleteTodoPandingAction>\r\n  | ReturnType<typeof deleteTodoSuccesAction>\r\n  | ReturnType<typeof deleteTodoErrorAction>\r\n  | ReturnType<typeof deleteAllTodosPandingAction>\r\n  | ReturnType<typeof deleteAllTodosSuccesAction>\r\n  | ReturnType<typeof deleteAllTodosErrorAction>\r\n  | ReturnType<typeof createTodoPandingAction>\r\n  | ReturnType<typeof createTodoSuccesAction>\r\n  | ReturnType<typeof createTodoErrorAction>;\r\n\r\n// export type SagaTypes =\r\n//   | ReturnType<typeof getTodosAction>\r\n//   | ReturnType<typeof updateTodoAction>\r\n//   | ReturnType<typeof deleteTodoAction>\r\n//   | ReturnType<typeof deleteAllTodosAction>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport SaveOrEdit from \"./SaveOrEdit\";\r\nimport { whitchColorName } from \"../configs\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport { createTodoAction } from \"../redux/actions\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\ntype ModalProps = {\r\n  open: boolean;\r\n  handleClick: () => void;\r\n} & ConnectedProps<typeof connector>;\r\ntype ModalState = {\r\n  name: string;\r\n  text: string;\r\n  color: Colors;\r\n};\r\n\r\nclass Modal extends React.Component<ModalProps, ModalState> {\r\n  el: HTMLDivElement;\r\n  constructor(props: ModalProps) {\r\n    super(props);\r\n    this.el = document.createElement(\"div\");\r\n    this.state = {\r\n      name: \"\",\r\n      text: \"\",\r\n      color: \"#e91e63\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    modalRoot?.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot?.removeChild(this.el);\r\n  }\r\n\r\n  onSubmit() {}\r\n\r\n  componentDidUpdate(prevProps: ModalProps) {\r\n    if (this.props.open === false && prevProps.open === true) {\r\n      this.setState({ name: \"\", text: \"\", color: \"#e91e63\" });\r\n    }\r\n  }\r\n\r\n  handleName(name: string) {\r\n    this.setState((state) => ({ ...state, name }));\r\n  }\r\n  handleText(text: string) {\r\n    this.setState((state) => ({ ...state, text }));\r\n  }\r\n\r\n  handleColor(color: Colors) {\r\n    this.setState((state) => ({ ...state, color }));\r\n  }\r\n\r\n  render() {\r\n    const { name, text, color } = this.state;\r\n    const colorClassPrefix = whitchColorName(color);\r\n\r\n    return ReactDOM.createPortal(\r\n      <>\r\n        <div id=\"modal1\" className={`modal ${this.props.open ? \"\" : \"open\"}`}>\r\n          <div className=\"card add_card_block card__block blue-grey\">\r\n            <form\r\n              onSubmit={(ev) => {\r\n                ev.preventDefault();\r\n                this.props.addTodo({ color, title: name, description: text });\r\n                this.props.handleClick();\r\n              }}\r\n            >\r\n              <div className=\"card-content white-text\">\r\n                <input\r\n                  placeholder=\"New todo\"\r\n                  required\r\n                  className=\"card-title\"\r\n                  value={name}\r\n                  onChange={(e) => this.handleName(e.target.value)}\r\n                />\r\n                <textarea\r\n                  placeholder=\"Todo deskription\"\r\n                  required\r\n                  value={text}\r\n                  onChange={(e) => this.handleText(e.target.value)}\r\n                />\r\n              </div>\r\n              <div className=\"card-action card__action_wraper\">\r\n                <SaveOrEdit edit />\r\n                <div className={`color__block ${colorClassPrefix}`}>\r\n                  <div\r\n                    onClick={this.handleColor.bind(this, \"#e91e63\")}\r\n                    className=\"pink circle\"\r\n                  />\r\n                  <div\r\n                    onClick={this.handleColor.bind(this, \"#9c27b0\")}\r\n                    className=\"purple circle\"\r\n                  />\r\n                  <div\r\n                    onClick={this.handleColor.bind(this, \"#4caf50\")}\r\n                    className=\"green circle\"\r\n                  />\r\n                  <div\r\n                    onClick={this.handleColor.bind(this, \"#ffc107\")}\r\n                    className=\"yellow circle\"\r\n                  />\r\n                  <div\r\n                    onClick={this.handleColor.bind(this, \"#2196f3\")}\r\n                    className=\"sea-blue circle\"\r\n                  />\r\n                  <div\r\n                    onClick={this.handleColor.bind(this, \"#3f51b5\")}\r\n                    className=\"blue circle\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div\r\n          onClick={this.props.handleClick}\r\n          className={`modal-overlay ${this.props.open ? \"\" : \"open\"}`}\r\n        ></div>\r\n        <button\r\n          onClick={this.props.handleClick}\r\n          className=\"btn-floating btn-large waves-effect waves-light blue add_botton\"\r\n          type=\"button\"\r\n        >\r\n          <i className=\"material-icons\">add</i>\r\n        </button>\r\n      </>,\r\n      this.el\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addTodo: createTodoAction,\r\n};\r\n\r\nconst connector = connect(null, mapDispatchToProps);\r\n\r\nconst ModalCont = connector(Modal);\r\n\r\nclass Parent extends React.Component<{}, { open: boolean }> {\r\n  constructor(props: Readonly<{}>) {\r\n    super(props);\r\n    this.state = { open: true };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState((state) => ({\r\n      open: !state.open,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    return <ModalCont handleClick={this.handleClick} open={this.state.open} />;\r\n  }\r\n}\r\n\r\nexport default Parent;\r\n","import React from \"react\";\r\n\r\ntype Props = {\r\n  handleClick: () => void;\r\n};\r\n\r\nconst DeleteAll: React.FC<Props> = ({ handleClick }) => {\r\n  return (\r\n    <button\r\n      onClick={handleClick}\r\n      className=\"btn-floating btn-large waves-effect waves-light red delete_botton\"\r\n    >\r\n      <i className=\"material-icons\">delete</i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default React.memo(DeleteAll);\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport { Todo, Spinner } from \"./components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Modal, DeleteAll } from \"./components\";\r\nimport {\r\n  getTodosAction,\r\n  updateTodoAction,\r\n  deleteTodoAction,\r\n  deleteAllTodosAction,\r\n} from \"./redux/actions\";\r\nimport { RootState } from \"./redux/store\";\r\nimport \"./card.scss\";\r\n\r\nconst App: React.FC = () => {\r\n  const { panding, todos } = useSelector((state: RootState) => ({\r\n    panding: state.panding,\r\n    todos: state.todos,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const updateTodo = useCallback(\r\n    (index: number, todo: TODO) => {\r\n      dispatch(updateTodoAction(todo, index));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const deleteTodo = useCallback(\r\n    (index: number) => {\r\n      dispatch(deleteTodoAction(index));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const deleteAllTodos = useCallback(() => {\r\n    dispatch(deleteAllTodosAction());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTodosAction());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <DeleteAll handleClick={deleteAllTodos} />\r\n      <Spinner count={todos.length} panding={panding} />\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {todos.map((el, index) => (\r\n            <Todo\r\n              deleteTodo={deleteTodo}\r\n              updateTodo={updateTodo}\r\n              key={el._id}\r\n              index={index}\r\n              todo={el}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// const mapStateToProps = (state: RootState) => ({});\r\n\r\n// const mapDispatchToProps = {\r\n//   getTodos: getTodosAction,\r\n// };\r\n// const connector = connect(mapStateToProps, mapDispatchToProps);\r\n\r\n// export default connector(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { all, takeEvery, call, put, select, retry } from \"redux-saga/effects\";\r\nimport {\r\n  networkProwider,\r\n  GetTodosURL,\r\n  UpdateTodoURL,\r\n  DeleteTodoURL,\r\n  CreateTodoURL,\r\n} from \"../../configs\";\r\nimport {\r\n  getTodosSuccesAction,\r\n  getTodosPandingAction,\r\n  getTodosErrorAction,\r\n  updateTodoAction,\r\n  updateTodoPandingAction,\r\n  updateTodoErrorAction,\r\n  updateTodoSuccesAction,\r\n  deleteTodoAction,\r\n  deleteTodoPandingAction,\r\n  deleteTodoErrorAction,\r\n  deleteTodoSuccesAction,\r\n  deleteAllTodosSuccesAction,\r\n  deleteAllTodosErrorAction,\r\n  createTodoAction,\r\n  createTodoPandingAction,\r\n  createTodoErrorAction,\r\n  createTodoSuccesAction,\r\n} from \"../actions\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { RootState } from \"../store\";\r\n\r\nfunction* getTodosWroker() {\r\n  const check: TODOS = yield select((state: RootState) => state.todos);\r\n  if (check.length === 0) {\r\n    try {\r\n      yield put(getTodosPandingAction(true));\r\n      const { data }: AxiosResponse<SERV_TODOS> = yield call(\r\n        networkProwider.get,\r\n        GetTodosURL\r\n      );\r\n      const todos = data.map<TODO>((el) => ({ ...el, panding: false }));\r\n      yield put(getTodosSuccesAction(todos));\r\n    } catch (error) {\r\n      yield put(getTodosErrorAction(error));\r\n    } finally {\r\n      yield put(getTodosPandingAction(false));\r\n    }\r\n  }\r\n}\r\n\r\nfunction* updateTodoWorker({\r\n  index,\r\n  payload,\r\n}: ReturnType<typeof updateTodoAction>) {\r\n  const storeTodos: TODOS = yield select((state: RootState) => state.todos);\r\n  let curentTodo = { ...storeTodos[index] };\r\n  let newTodosList = [...storeTodos];\r\n  try {\r\n    curentTodo = { ...curentTodo, panding: true };\r\n    newTodosList[index] = curentTodo;\r\n    yield put(updateTodoPandingAction([...newTodosList]));\r\n    const { data }: AxiosResponse<SERV_TODO> = yield call(\r\n      networkProwider.patch,\r\n      UpdateTodoURL(payload._id),\r\n      payload\r\n    );\r\n    curentTodo = { ...curentTodo, ...data };\r\n    newTodosList[index] = curentTodo;\r\n    yield put(updateTodoSuccesAction([...newTodosList]));\r\n  } catch (error) {\r\n    yield put(updateTodoErrorAction(error));\r\n  } finally {\r\n    curentTodo = { ...curentTodo, panding: false };\r\n    newTodosList[index] = curentTodo;\r\n    yield put(updateTodoPandingAction([...newTodosList]));\r\n  }\r\n}\r\n\r\nfunction* deleteTodoWorker({\r\n  payload: index,\r\n}: ReturnType<typeof deleteTodoAction>) {\r\n  const storeTodos: TODOS = yield select((state: RootState) => state.todos);\r\n  let curentTodo = { ...storeTodos[index] };\r\n  let newTodosList = [...storeTodos];\r\n  try {\r\n    curentTodo = { ...curentTodo, panding: true };\r\n    newTodosList[index] = curentTodo;\r\n    yield put(deleteTodoPandingAction([...newTodosList]));\r\n    yield call(networkProwider.delete, DeleteTodoURL(curentTodo._id));\r\n    yield put(\r\n      deleteTodoSuccesAction(\r\n        newTodosList.filter((el) => el._id !== curentTodo._id)\r\n      )\r\n    );\r\n  } catch (error) {\r\n    yield put(deleteTodoErrorAction(error));\r\n  }\r\n}\r\n\r\nfunction* deleteAllTodosWorker() {\r\n  try {\r\n    const storeTodos: TODOS = yield select((state: RootState) => state.todos);\r\n\r\n    for (const item of storeTodos) {\r\n      yield retry(2, 150, networkProwider.delete, DeleteTodoURL(item._id));\r\n    }\r\n    yield put(deleteAllTodosSuccesAction([]));\r\n  } catch (error) {\r\n    yield put(deleteAllTodosErrorAction(error));\r\n  }\r\n}\r\n\r\nfunction* addTodoWorker({ payload }: ReturnType<typeof createTodoAction>) {\r\n  try {\r\n    const storeTodos: TODOS = yield select((state: RootState) => state.todos);\r\n    yield put(createTodoPandingAction(true));\r\n    const { data }: AxiosResponse<SERV_TODO> = yield call(\r\n      networkProwider.post,\r\n      CreateTodoURL,\r\n      payload\r\n    );\r\n    yield put(\r\n      createTodoSuccesAction([...storeTodos, { ...data, panding: false }])\r\n    );\r\n  } catch (error) {\r\n    yield put(createTodoErrorAction(error));\r\n  } finally {\r\n    yield put(createTodoPandingAction(false));\r\n  }\r\n}\r\n\r\nfunction* rootSaga() {\r\n  yield all([\r\n    takeEvery(\"GET_TODOS\", getTodosWroker),\r\n    takeEvery(\"UPDATE_TODO\", updateTodoWorker),\r\n    takeEvery(\"DELETE_TODO\", deleteTodoWorker),\r\n    takeEvery(\"DELETE_ALL_TODOS\", deleteAllTodosWorker),\r\n    takeEvery(\"ADD_TODO\", addTodoWorker),\r\n  ]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { Reducer } from \"redux\";\r\nimport { ReduxActionTypes } from \"../actions\";\r\n\r\ntype initialState = {\r\n  todos: TODOS;\r\n  panding: boolean;\r\n  error: null | Error;\r\n};\r\n\r\nconst initialState: initialState = {\r\n  todos: [],\r\n  panding: false,\r\n  error: null,\r\n};\r\n\r\nconst reducer: Reducer<initialState, ReduxActionTypes> = (\r\n  state = initialState,\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"GET_TODOS_SUCCES\":\r\n      return { ...state, todos: action.payload };\r\n    case \"GET_TODOS_PANDING\":\r\n      return { ...state, panding: action.payload };\r\n    case \"GET_TODOS_ERROR\":\r\n      return { ...state, error: action.payload };\r\n    case \"DELETE_TODO_ERROR\":\r\n      return { ...state, error: action.payload };\r\n    case \"UPDATE_TODO_ERROR\":\r\n      return { ...state, error: action.payload };\r\n    case \"DELETE_ALL_TODOS_ERROR\":\r\n      return { ...state, error: action.payload };\r\n    case \"DELETE_ALL_TODOS_PANDING\":\r\n      return { ...state, todos: action.payload };\r\n    case \"DELETE_ALL_TODOS_SUCCES\":\r\n      return { ...state, todos: action.payload };\r\n    case \"DELETE_TODO_PANDING\":\r\n      return { ...state, todos: action.payload };\r\n    case \"DELETE_TODO_SUCCES\":\r\n      return { ...state, todos: action.payload };\r\n    case \"UPDATE_TODO_PANDING\":\r\n      return { ...state, todos: action.payload };\r\n    case \"UPDATE_TODO_SUCCES\":\r\n      return { ...state, todos: action.payload };\r\n    case \"ADD_TODO_ERROR\":\r\n      return { ...state, error: action.payload };\r\n    case \"ADD_TODO_PANDING\":\r\n      return { ...state, panding: action.payload };\r\n    case \"ADD_TODO_SUCCES\":\r\n      return { ...state, todos: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore, applyMiddleware, Store } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport sagas from \"./sagas\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { persistStore, persistReducer, PersistConfig } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage/session\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst persistConfig: PersistConfig<ReturnType<typeof rootReducer>> = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst configureStore = () => {\r\n  let store: Store;\r\n\r\n  if (process.env.NODE_ENV === \"production\") {\r\n    store = createStore(persistedReducer, applyMiddleware(sagaMiddleware));\r\n  } else {\r\n    store = createStore(\r\n      persistedReducer,\r\n      composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n    );\r\n    if (module.hot) {\r\n      module.hot.accept(\"./reducers\", () => {\r\n        const nextRootReducer = require(\"./reducers\").default;\r\n        store.replaceReducer(persistReducer(persistConfig, nextRootReducer));\r\n      });\r\n    }\r\n  }\r\n\r\n  sagaMiddleware.run(sagas);\r\n  //@ts-ignore\r\n  let persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n\r\nconst { persistor, store } = configureStore();\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n\r\nexport { persistor, store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}